"""empty message

Revision ID: a2c3cd9d6360
Revises: 7552cb98eb4e
Create Date: 2024-10-18 23:37:00.445736

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a2c3cd9d6360'
down_revision = '7552cb98eb4e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('logins')
    op.drop_table('favorites')
    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('eye_color', sa.String(length=250), nullable=True))
        batch_op.drop_column('color_eyes')

    with op.batch_alter_table('favoritecharacters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('favoriteplanets', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('favoritevehicles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.String(length=50), nullable=True))

    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.drop_column('lastname')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vehicles', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lastname', sa.VARCHAR(length=250), autoincrement=False, nullable=True))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('password')

    with op.batch_alter_table('favoritevehicles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('favoriteplanets', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('favoritecharacters', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('characters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('color_eyes', sa.VARCHAR(length=250), autoincrement=False, nullable=True))
        batch_op.drop_column('eye_color')

    op.create_table('favorites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('favorites', postgresql.ENUM('personaje', 'vehiculo', 'planeta', name='favorite_types'), autoincrement=False, nullable=True),
    sa.Column('fcharacter_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fcvehicle_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fplanet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['fcharacter_id'], ['favoritecharacters.id'], name='favorites_fcharacter_id_fkey'),
    sa.ForeignKeyConstraint(['fcvehicle_id'], ['favoritevehicles.id'], name='favorites_fcvehicle_id_fkey'),
    sa.ForeignKeyConstraint(['fplanet_id'], ['favoriteplanets.id'], name='favorites_fplanet_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name='favorites_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorites_pkey')
    )
    op.create_table('logins',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name='logins_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='logins_pkey')
    )
    # ### end Alembic commands ###
